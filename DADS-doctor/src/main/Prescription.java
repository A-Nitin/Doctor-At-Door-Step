/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import com.itextpdf.kernel.pdf.PdfWriter;
import java.awt.Color;
import java.io.FileOutputStream;
import java.sql.*;
import java.time.*;
import javax.swing.JFrame;
import mail.SendMail;
import mail.sendAttachments;

/**
 *
 * @author Nitin.A
 */
public class Prescription extends JFrame implements Runnable {

    /**
     * Creates new form Prescription
     * @param user_name
     * @param conn
     */
    
    Connection conn=null;
    PreparedStatement ps =null;
    ResultSet rs =null;
    String user_name;
    String doc_name;
    int booking_id;
    HomePage hp;
    int xMouse;
    int yMouse;
    
    String get_name(String doc_name){
        try {
            ps = conn.prepareStatement("select * from bookings where request_status=? and doctor_name=?");
            ps.setString(1, "accepted");
            ps.setString(2, doc_name);
            rs = ps.executeQuery();
            if(rs.next()){
                booking_id = rs.getInt("id");
                return rs.getString("user_name");
            }
        } catch (SQLException ex) {}
        return null;
    }
    
    String get_prescription(String pres){
        String pres_modified = pres.replaceAll("\n", "<br>");
        return pres_modified;
    }
    
    String get_date(){
        LocalDate date = LocalDate.now();
        return date.toString();
    }
    
    String get_time(){
        return LocalTime.now().toString();
    }
    
    void send_message(String doc_name){

        try {
            ps = conn.prepareStatement("select * from users where name=?");
            ps.setString(1, user_name);
            rs = ps.executeQuery();
            rs.next();
            new Thread(new Runnable(){
                @Override
                public void run() {
                    try {
                        sendAttachments s = new sendAttachments(rs.getString("email"));
                    } catch (SQLException ex) {}
                }
            }).start();
        } catch (SQLException ex) {}
    }
    
    void fill_choice(){
        try {
            ps = conn.prepareStatement("select * from history where doctor_name =?");
            ps.setString(1, doc_name);
            rs = ps.executeQuery();
            while(rs.next()){
                if(rs.getString("prescription_name")!=null)     
                    choice.add(rs.getString("prescription_name"));
            }
        } catch (SQLException ex) {}
    }
    
    void create_file(){
        try {
//            string = string.replaceAll("<br>", "\n");
            PdfMaker pm = new PdfMaker();
            pm.create(conn,booking_id);
        } catch (Exception ex) {}
    }
    
    public Prescription(HomePage hp,Connection conn,String doc_name) {
        initComponents();
        this.conn = conn;
        this.doc_name = doc_name;
        user_name = get_name(doc_name);
        title.setText("<html>Prescription for <span style=\\\"font-size:18pt;"
                + "color:rgb(255,51,51)\">"+user_name+"</span></html>");
        this.hp = hp;
        fill_choice();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textArea = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JLabel();
        choice = new java.awt.Choice();
        saveBtn = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JLabel();
        presname = new javax.swing.JTextField();
        errorMsg = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        okBtn = new javax.swing.JLabel();
        title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(255, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(255, 51, 51)));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        textArea.setForeground(new java.awt.Color(51, 51, 51));
        textArea.setRows(5);
        textArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel2.add(textArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 360, 171));

        sendBtn.setBackground(new java.awt.Color(255, 51, 51));
        sendBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sendBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sendBtn.setText("Send");
        sendBtn.setOpaque(true);
        sendBtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                sendBtnMouseMoved(evt);
            }
        });
        sendBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendBtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sendBtnMouseExited(evt);
            }
        });
        jPanel2.add(sendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 100, 31));
        jPanel2.add(choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 124, -1));

        saveBtn.setBackground(new java.awt.Color(255, 51, 51));
        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveBtn.setText("Save & Send");
        saveBtn.setOpaque(true);
        saveBtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                saveBtnMouseMoved(evt);
            }
        });
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBtnMouseExited(evt);
            }
        });
        jPanel2.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 120, 31));

        cancelBtn.setBackground(new java.awt.Color(255, 51, 51));
        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelBtn.setText("Cancel");
        cancelBtn.setOpaque(true);
        cancelBtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cancelBtnMouseMoved(evt);
            }
        });
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelBtnMouseExited(evt);
            }
        });
        jPanel2.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 100, 31));

        presname.setBackground(new java.awt.Color(51, 51, 51));
        presname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        presname.setForeground(new java.awt.Color(255, 51, 51));
        presname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        presname.setBorder(null);
        jPanel2.add(presname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 130, -1));

        errorMsg.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        errorMsg.setForeground(new java.awt.Color(255, 51, 51));
        errorMsg.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        errorMsg.setText("Name it:");
        jPanel2.add(errorMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 60, -1));

        msg.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        msg.setForeground(new java.awt.Color(51, 51, 51));
        msg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg.setText("Name your prescription if you want to save it.");
        jPanel2.add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 1, 400, 40));

        okBtn.setBackground(new java.awt.Color(255, 51, 51));
        okBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        okBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        okBtn.setText("Ok");
        okBtn.setOpaque(true);
        okBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okBtnMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                okBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                okBtnMouseReleased(evt);
            }
        });
        jPanel2.add(okBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 70, 20));

        title.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Prescription");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sendBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendBtnMouseExited
        sendBtn.setBackground(new Color(255,51,51));
        sendBtn.setForeground(new Color(51,51,51));
    }//GEN-LAST:event_sendBtnMouseExited

    private void sendBtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendBtnMouseMoved
        sendBtn.setBackground(new Color(51,51,51));
        sendBtn.setForeground(new Color(255,51,51));
    }//GEN-LAST:event_sendBtnMouseMoved

    private void sendBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendBtnMouseClicked
        try {
            String pres = get_prescription(textArea.getText());
            
            ps = conn.prepareStatement("insert into history (id,doctor_name,user_name,date,time,prescription) values (?,?,?,?,?,?)");
            ps.setInt(1, booking_id);
            ps.setString(2,doc_name);
            ps.setString(3,user_name);
            ps.setString(4,get_date());
            ps.setString(5,get_time());
            ps.setString(6,pres);
            ps.executeUpdate();
            
            create_file();
            
            ps = conn.prepareStatement("update bookings set request_status=\"completed\" where id=?");
            ps.setInt(1,booking_id);
            ps.executeUpdate();
            
            ps = conn.prepareStatement("update doctors set status=\"available\" where name=?");
            ps.setString(1,doc_name);
            ps.executeUpdate();
            
            send_message(doc_name);
            
            hp.set_enabled();
            hp.refresh();
            hp.chage_respond();    
            
            this.dispose();
        } catch (Exception ex) {}
    }//GEN-LAST:event_sendBtnMouseClicked

    private void saveBtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseMoved
        saveBtn.setBackground(new Color(51,51,51));
        saveBtn.setForeground(new Color(255,51,51));
    }//GEN-LAST:event_saveBtnMouseMoved

    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
        try {
            String pres_name = presname.getText();
            if(pres_name.equals("")){
                msg.setText("Name field is empty.");
            }
            else
            {
                ps = conn.prepareStatement("select * from history where prescription_name=?");
                ps.setString(1,pres_name);
                rs = ps.executeQuery();
                if(rs.next()){
                    msg.setText("Give a different name.");
                }
                else
                {
                    String pres = get_prescription(textArea.getText());

                    ps = conn.prepareStatement("insert into history (id,doctor_name,user_name,date,time,prescription,prescription_name) values (?,?,?,?,?,?,?)");
                    ps.setInt(1, booking_id);
                    ps.setString(2,doc_name);
                    ps.setString(3,user_name);
                    ps.setString(4,get_date());
                    ps.setString(5,get_time());
                    ps.setString(6,pres);
                    ps.setString(7,pres_name);
                    ps.executeUpdate();

                    create_file();
                    
                    ps = conn.prepareStatement("update bookings set request_status=\"completed\" where id=?");
                    ps.setInt(1,booking_id);
                    ps.executeUpdate();

                    ps = conn.prepareStatement("update doctors set status=\"available\" where name=?");
                    ps.setString(1,doc_name);
                    ps.executeUpdate();

                    send_message(doc_name);
                    hp.set_enabled();
                    hp.refresh();
                    hp.chage_respond();    
                    this.dispose();
                }
            }
        } catch (SQLException ex) {}
    }//GEN-LAST:event_saveBtnMouseClicked

    private void saveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseExited
        saveBtn.setBackground(new Color(255,51,51));
        saveBtn.setForeground(new Color(51,51,51));
    }//GEN-LAST:event_saveBtnMouseExited

    private void cancelBtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseMoved
        cancelBtn.setBackground(new Color(51,51,51));
        cancelBtn.setForeground(new Color(255,51,51));
    }//GEN-LAST:event_cancelBtnMouseMoved

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        hp.set_enabled();
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseClicked

    private void cancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseExited
        cancelBtn.setBackground(new Color(255,51,51));
        cancelBtn.setForeground(new Color(51,51,51));
    }//GEN-LAST:event_cancelBtnMouseExited

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xMouse = evt.getX();
        yMouse =evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void okBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okBtnMouseClicked
        try {
            String value = choice.getSelectedItem();
            ps = conn.prepareStatement("select * from history where prescription_name=?");
            ps.setString(1, value);
            rs = ps.executeQuery();
            if(rs.next()){
                String pres =rs.getString("prescription");
                textArea.setText(pres.replaceAll("<br>", "\n"));
            }
        } catch (SQLException ex) {}
    }//GEN-LAST:event_okBtnMouseClicked

    private void okBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okBtnMousePressed
        okBtn.setBackground(new Color(51,51,51));
        okBtn.setForeground(new Color(255,51,51));
    }//GEN-LAST:event_okBtnMousePressed

    private void okBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okBtnMouseReleased
        okBtn.setBackground(new Color(255,51,51));
        okBtn.setForeground(new Color(51,51,51));
    }//GEN-LAST:event_okBtnMouseReleased
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Prescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Prescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Prescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Prescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Prescription("Nitin Arivu").setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelBtn;
    private java.awt.Choice choice;
    private javax.swing.JLabel errorMsg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel msg;
    private javax.swing.JLabel okBtn;
    private javax.swing.JTextField presname;
    private javax.swing.JLabel saveBtn;
    private javax.swing.JLabel sendBtn;
    private javax.swing.JTextArea textArea;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        setVisible(true); 
    }
}
